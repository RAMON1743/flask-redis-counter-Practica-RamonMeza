version: 2.1

orbs:
  python: circleci/python@1.3.0

jobs:
  build:
    docker:
      - image: cimg/python:3.9
      - image: redis:alpine  # 游늷 Agregar Redis como servicio
    steps:
      - checkout
      - run:
          name: Configurar Redis en Flask
          command: echo "export REDIS_HOST=redis" >> $BASH_ENV  # 游늷 Agregar variable de entorno
      - run:
          name: Esperar a que Redis est칠 listo
          command: |
            for i in {1..10}; do
              nc -z redis 6379 && echo "Redis est치 listo" && exit 0
              echo "Esperando a Redis..."
              sleep 2
            done
            echo "Redis no respondi칩 a tiempo" && exit 1
      - run:
          name: Configurar PYTHONPATH
          command: echo "export PYTHONPATH=$PYTHONPATH:$(pwd)" >> $BASH_ENV
      - run:
          name: Instalar dependencias
          command: pip install --no-cache-dir -r requirements.txt
      - run:
          name: Ejecutar pruebas
          command: pytest --cov=app --cov-report=xml
      - run:
          name: An치lisis est치tico de c칩digo con pylint
          command: pylint --disable=C0303 app  # 游늷 Desactivar trailing-whitespace en Pylint
      - run:
          name: Linting con flake8
          command: flake8 app
      - run:
          name: Construir imagen Docker
          command: docker build -t $DOCKERHUB_REPO:latest .

  push_docker:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Iniciar sesi칩n en Docker Hub
          command: echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Construir imagen Docker
          command: docker build -t $DOCKERHUB_REPO:latest .
      - run:
          name: Etiquetar imagen con el commit SHA
          command: docker tag $DOCKERHUB_REPO:latest $DOCKERHUB_REPO:${CIRCLE_SHA1}
      - run:
          name: Subir imagen a Docker Hub
          command: |
            docker push $DOCKERHUB_REPO:latest
            docker push $DOCKERHUB_REPO:${CIRCLE_SHA1}

  vulnerability_scan:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run:
          name: Instalar Node.js y Snyk CLI
          command: |
            sudo apt update
            sudo apt install -y nodejs npm
            npm install -g snyk
      - run:
          name: Autenticar con Snyk
          command: snyk auth $SNYK_TOKEN
      - run:
          name: Ejecutar an치lisis de vulnerabilidades
          command: snyk test

workflows:
  version: 2
  build_test_and_push:
    jobs:
      - build
      - vulnerability_scan:
          requires:
            - build
      - push_docker:
          requires:
            - build
            - vulnerability_scan
          filters:
            branches:
              only:
                - master
                - main